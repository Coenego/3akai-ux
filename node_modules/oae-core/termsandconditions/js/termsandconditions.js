/*!
 * Copyright 2015 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function($, oae) {

    return function(uid, showSettings) {

        // The widget container
        var $rootel = $('#' + uid);

        /**
         * Sign the user in
         *
         * @private
         */
        var signIn = function() {

            // Get the form values
            var values = $('#sign-in-form').serializeObject();

            // Disable the form during user creation, so it can't be submitted multiple times
            $('button, input', $rootel).prop('disabled', true);

            var params = parseQueryString();
            var username = params.username;
            var token = params.token;

            if (!username || !token) {
                // Unlock the form components
                $('button, input', $rootel).prop('disabled', false);

                return oae.api.util.notification(
                    oae.api.i18n.translate('__MSG__MISSING_USERNAME_OR_TOKEN__', 'termsandconditions'),
                    oae.api.i18n.translate('__MSG__MISSING_USERNAME_OR_TOKEN__', 'termsandconditions'),
                    'error'
                );
            }

            // Authenticate the user
            oae.api.authentication.localLogin(username, token, function(err, data) {
                if (err) {
                    // Unlock the form components
                    $('button, input', $rootel).prop('disabled', false);

                    return oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__UNABLE_TO_SIGN_IN__', 'termsandconditions'),
                        oae.api.i18n.translate('__MSG__AN_ERROR_OCCURRED_WHILE_AUTHENTICATING__', 'termsandconditions'),
                        'error'
                    );
                }

                // Change the user's password
                var password = values.password;
                oae.api.authentication.changePassword(token, password, function(err, data) {
                    if (err) {
                        // Unlock the form components
                        $('button, input', $rootel).prop('disabled', false);

                        return oae.api.util.notification(
                            oae.api.i18n.translate('__MSG__PASSWORD_NOT_CHANGED__', 'manageuser'),
                            oae.api.i18n.translate('__MSG__THE_PASSWORD_UPDATE_FAILED__', 'manageuser'),
                            'error'
                        );
                    }

                    // Unlock the form components
                    $('button, input', $rootel).prop('disabled', false);

                    // Hide the modal
                    $('#termsandconditions-modal', $rootel).modal('hide');
                });
            });
        };

        /**
         * Set up the validation on the register form, including the error messages
         */
        var setUpValidation = function() {
            var validateOpts = {
                'rules': {
                    'password': {
                        'minlength': 6
                    },
                    'password_repeat': {
                        'equalTo': '#sign-in-password'
                    }
                },
                'messages': {
                    'password': {
                        'required': oae.api.i18n.translate('__MSG__PLEASE_ENTER_YOUR_PASSWORD__'),
                        'minlength': oae.api.i18n.translate('__MSG__YOUR_PASSWORD_SHOULD_BE_AT_LEAST_SIX_CHARACTERS_LONG__')
                    },
                    'password_repeat': {
                        'required': oae.api.i18n.translate('__MSG__PLEASE_REPEAT_YOUR_PASSWORD__'),
                        'passwordmatch': oae.api.i18n.translate('__MSG__THIS_PASSWORD_DOES_NOT_MATCH_THE_FIRST_ONE__')
                    }
                },
                'submitHandler': signIn
            };
            oae.api.util.validation().validate($('#sign-in-form', $rootel), validateOpts);
        };

        /**
         * Toggle the Terms and Conditions button
         *
         * @private
         */
        var toggleTermsAndConditions = function() {
            $('#termsandconditions-proceed').attr('disabled', !$(this).is(':checked'));
        };

        /**
         * Parse the query string
         *
         * @return {Object}     Object containing the query string parameters
         */
        var parseQueryString = function() {
            location.queryString = {};
            location.search.substr(1).split('&').forEach(function(pair) {
                if (pair === '') return;
                var parts = pair.split('=');
                location.queryString[parts[0]] = parts[1] && decodeURIComponent(parts[1].replace(/\+/g, ' '));
            });
            return location.queryString;
        };


        ///////////////
        // RENDERING //
        ///////////////

        /**
         * Render the password form into the widget
         *
         * @private
         */
        var renderPasswordForm = function() {
            // Render the password form template
            oae.api.util.template().render($('#termsandconditions-create-password-template', $rootel), null, $('.modal-body', $rootel));
            // Render the password form footer template
            oae.api.util.template().render($('#termsandconditions-create-password-footer-template', $rootel), null, $('.modal-footer', $rootel));
        };

        /**
         * Render the Terms and Conditions template into the widget
         *
         * @private
         */
        var renderTermsAndConditions = function() {
            oae.api.user.getTC(function(err, data) {
                // Render the modal body
                oae.api.util.template().render($('#termsandconditions-template', $rootel), {
                    'terms': data.text
                }, $('.modal-body', $rootel));

                // Render the modal footer
                oae.api.util.template().render($('#termsandconditions-footer-template', $rootel), {
                    needsToAccept: showSettings
                }, $('.modal-footer', $rootel));
            });
        };


        ////////////////////
        // INITIALISATION //
        ////////////////////

        /**
         * Add event listeners to various components in the view
         *
         * @private
         */
        var addBinding = function() {
            // Accept the terms and conditions
            $rootel.on('click', '#termsandconditions-sign-in', signIn);
            // Display the password form
            $rootel.on('click', '#termsandconditions-proceed', renderPasswordForm);
            // Toggle the terms and conditions checkbox
            $rootel.on('change', '#termsandconditions-toggle-accept', toggleTermsAndConditions);
        };

        /**
         * Set up the Terms and Conditions
         *
         * @private
         */
        var setUpTermsAndConditions = function() {
            // Show the modal
            $('#termsandconditions-modal', $rootel).modal();
            // Lock the modal so it can't be clicked away
            $('#termsandconditions-modal', $rootel).modal('lock');
            // Render the terms and conditions modal
            renderTermsAndConditions();
        };

        /**
         * Initialise the widget
         *
         * @private
         */
        var initialise = function() {
            addBinding();
            setUpValidation();
            setUpTermsAndConditions();
        };

        initialise();
    };
});
